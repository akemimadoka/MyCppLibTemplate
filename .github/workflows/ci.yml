name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - compiler: 'gcc'
          - compiler: 'clang'

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install-common-deps
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
          sudo apt update
          sudo apt install -y cmake ninja-build python3-pip python3-setuptools python3-wheel python3-yaml
          sudo pip3 install --upgrade pip
          sudo pip3 install --upgrade conan requests
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan config init
          sed -i 's/\"13\"\]/\"13\", \"14\"\]/' ~/.conan/settings.yml
      - name: install-compiler-gcc
        if: ${{ matrix.compiler == 'gcc' }}
        run: |
          sudo apt install -y g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 60 --slave /usr/bin/g++ g++ /usr/bin/g++-11
          export CC=/usr/bin/gcc-11
          export CXX=/usr/bin/g++-11
          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
      - name: install-compiler-clang
        if: ${{ matrix.compiler == 'clang' }}
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" | sudo tee /etc/apt/sources.list.d/llvm.list >/dev/null
          sudo apt update
          sudo apt install -y clang-14
          export CC=/usr/bin/clang-14
          export CXX=/usr/bin/clang++-14
          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
      - name: build
        env:
          COMPILER: ${{ matrix.compiler }}
        run: |
          cmake -GNinja -S . -B build -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
          cmake --build build --parallel
          cd build
          ctest -VV
